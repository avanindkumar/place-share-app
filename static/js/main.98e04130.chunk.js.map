{"version":3,"sources":["shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","shared/hooks/http-hook.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Card.js","places/pages/UpdatePlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","user/components/UsersItem.js","user/components/UsersList.js","user/pages/Users.js","user/pages/Auth.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["VALIDATOR_MINLENGTH","val","type","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","Button","href","size","inverse","danger","children","to","exact","onClick","disabled","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","intialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","center","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","src","alt","current","click","useHttpClient","isLoading","setIsLoading","error","setError","activeHttpRequest","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","data","filter","reqCtrl","ok","console","log","Error","message","forEach","abortCtrl","abort","clearError","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","show","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onCancel","onClear","onClose","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewPlace","auth","useContext","history","useHistory","title","description","address","image","inputHandler","placeSubmitHandler","formData","FormData","append","process","Authorization","Card","i","UpdatePlace","placeId","useParams","loadedPlace","setLoadedPlace","setFormData","place","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Map","mapRef","zoom","map","window","google","maps","Marker","position","PlaceItem","creatorId","coordinates","onDelete","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","closeDeleteWarningHandler","confirmDeleteHandler","PlaceList","places","key","creator","location","UserPlaces","loadedPlaces","setLoadedPlaces","fetchUserPlaces","pervPlaces","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Avatar","width","height","UsersItem","name","placeCount","UsersList","items","user","Users","users","setUsers","fetchUsers","logoutTimer","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","App","routes","setUserId","setToken","tokenExpirationDate","setTokenExpirationDate","uId","expirationDate","Date","getTime","localStorage","setItem","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.98e04130.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isValid: props.initialIsValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [onInput, id, value, isValid]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        type={props.type}\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, intialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: intialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        id={id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpeg,.jpg,.png\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick a image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          Pick Image\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p className={`${center && \"center\"}`}>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequest = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const data = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          console.log(data);\r\n          throw new Error(data.message);\r\n        }\r\n        setIsLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport BackDrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.show && <BackDrop onClick={props.onClick} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  const clickHandler = () => {\n    props.onClose();\n  };\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={clickHandler}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nimport \"./PlaceForm.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NewPlace = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      const data = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/places/\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      console.log(data);\r\n      history.push(\"/\");\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClose={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          center\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Plz provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./PlaceForm.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdatePlace = () => {\r\n  const placeId = useParams().placeId;\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(data.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: data.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: data.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    fetchPlace();\r\n  }, [placeId, sendRequest, setFormData]);\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find the place.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(`/${auth.userId}/places`);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClose={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Plz enter a valid title.\"\r\n            initialValue={loadedPlace.title}\r\n            initialIsValid={true}\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Plz enter a valid description (minimum 5 character).\"\r\n            initialValue={loadedPlace.description}\r\n            initialIsValid={true}\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"Submit\" disabled={!formState.isValid}>\r\n            Update Place\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  const { center, zoom } = props;\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport \"./PlaceItem.css\";\r\nconst PlaceItem = ({\r\n  id,\r\n  image,\r\n  title,\r\n  description,\r\n  address,\r\n  creatorId,\r\n  coordinates,\r\n  onDelete,\r\n}) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n  const closeDeleteWarningHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async (event) => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      onDelete(id);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClose={clearError} />\r\n\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={closeDeleteWarningHandler}\r\n        header=\"Are you sure?\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <>\r\n            <Button inverse onClick={closeDeleteWarningHandler}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <p>Do you want to delete this place. It can't be undone.</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"palce-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={image} alt={title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{title}</h2>\r\n            <h3>{address} </h3>\r\n            <p>{description} </p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              View On Map\r\n            </Button>\r\n            {auth.userId === creatorId && (\r\n              <Button to={`/places/${id}`}>Edit</Button>\r\n            )}\r\n            {auth.userId === creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\n\r\nimport \"./PlaceList.css\";\r\nconst PlaceList = ({ places, onDelete }) => {\r\n  if (places.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {places.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nconst UserPlaces = () => {\r\n  const userId = useParams().userId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUserPlaces = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(data.places);\r\n        console.log(data.places);\r\n      } catch (error) {}\r\n    };\r\n    fetchUserPlaces();\r\n  }, [sendRequest, userId]);\r\n  const placeDeleteHandler = (placeId) => {\r\n    setLoadedPlaces((pervPlaces) =>\r\n      pervPlaces.filter((place) => place.id !== placeId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClose={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList places={loadedPlaces} onDelete={placeDeleteHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = () => {\r\n  const auth = useContext(AuthContext);\r\n  console.log(auth);\r\n  const logoutHandler = () => {\r\n    auth.logout();\r\n  };\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">Add Places</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\" onClick={logoutHandler}>\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport MainHeader from \"./MainHeader\";\r\n\r\nimport \"./MainNavigation.css\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UsersItem = ({ id, name, image, placeCount }) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={image} alt={name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{name}</h2>\r\n            <h3>\r\n              {placeCount} {placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UsersItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport UsersItem from \"./UsersItem\";\r\nimport \"./UsersList.css\";\r\n\r\nconst UsersList = ({ items }) => {\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No Users Found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {items.map((user) => (\r\n        <UsersItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport UsersList from \"../components/UsersList\";\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/`\r\n        );\r\n        setUsers(data);\r\n      } catch (error) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClose={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {!isLoading && users && <UsersList items={users} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(data.userId, data.token);\r\n        console.log(auth);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        console.log({ data });\r\n        auth.login(data.userId, data.token);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {<ErrorModal error={error} onClose={clearError} />}\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter Your Name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id={\"image\"}\r\n              onInput={inputHandler}\r\n              errorText=\"Plz provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid Email ID.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password (at least 6 characters).\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"Login\" : \"SignUp\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          Switch to {isLoginMode ? \"Sign-Up\" : \"Login\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n  const [userId, setUserId] = useState();\r\n  const [token, setToken] = useState(null);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uId, token, expirationDate) => {\r\n    setUserId(uId);\r\n    setToken(token);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    console.log({ tokenExpirationDate });\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uId,\r\n        token: token,\r\n        expirationDate: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setUserId(null);\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [logout, token, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expirationDate) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expirationDate)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { userId, token, login, logout };\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport Users from \"./user/pages/Users\";\nimport Auth from \"./user/pages/Auth\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst App = () => {\n  const { userId, token, login, logout } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        userId: userId,\n        token: token,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}